// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// User authentication
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Family management
model Family {
  id          String         @id @default(uuid())
  name        String
  description String?
  members     FamilyMember[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model FamilyMember {
  id            String          @id @default(uuid())
  name          String
  email         String          @unique
  role          String          // HEAD, MEMBER
  familyId      String
  family        Family          @relation(fields: [familyId], references: [id])
  portfolios    Portfolio[]
  financialGoals FinancialGoal[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

// Portfolio management
model Portfolio {
  id            String       @id @default(uuid())
  name          String
  description   String?
  memberId      String
  member        FamilyMember @relation(fields: [memberId], references: [id])
  assets        Asset[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

// Asset tracking
model Asset {
  id              String         @id @default(uuid())
  name            String
  assetType       String        // STOCK, BOND, REAL_ESTATE, CASH, etc.
  purchaseDate    DateTime
  purchaseValue   Float
  currentValue    Float
  quantity        Float?
  portfolioId     String
  portfolio       Portfolio      @relation(fields: [portfolioId], references: [id])
  goalAllocations GoalAsset[]
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  // Metadata fields
  symbol          String?       // For stocks and mutual funds
  description     String?       // General description
  category        String?       // Sub-category within asset type
  provider        String?       // Bank/broker/insurance provider
  maturityDate    DateTime?     // For FDs, bonds, insurance
  interestRate    Float?        // For FDs, bonds
}

// Financial goals
model FinancialGoal {
  id            String      @id @default(uuid())
  name          String
  targetDate    DateTime
  targetAmount  Float
  memberId      String
  member        FamilyMember @relation(fields: [memberId], references: [id])
  assets        GoalAsset[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

// Asset to Goal mapping
model GoalAsset {
  id                  String        @id @default(uuid())
  goalId              String
  goal                FinancialGoal @relation(fields: [goalId], references: [id])
  assetId             String
  asset               Asset         @relation(fields: [assetId], references: [id])
  allocationPercentage Float
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
}
